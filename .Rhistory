##############################################
# Genetic Matching
##############################################
rm (list = ls())
library(foreign)
library(Hmisc)
library(xtable)
library(Matching)
library("rbounds")
library(rgenoud)
library(designmatch)
##############################################
# Read data and prepare basic output
##############################################
load("~/Dropbox/Share Space - Giancarlo 2/00_archive/clean data may 20/counties_chile_data_2015nov21.RData")
##############################################
# Prepare data
##############################################
# Treatment
d$t_ind = NA
d$t_ind[d$declaration==0]= 0
d$t_ind[d$pga>0.275 & d$declaration==1]= 1
table(d$t_ind)
# Drop observations
d = d[!is.na(d$t_ind), ] # Partially treated observations
d = d[d$smallcounty==0, ] # Small counties with missing data
d = d[d$newcounty==0, ] # New counties with missing data
d = d[d$dividedcounty==0,] # Counties that were divided in two
# Sort by treatment
d = d[order(d$t_ind, decreasing=TRUE), ]
# Attach the data
attach(d)
##############################################
# Explore data
##############################################
dim(d)
names(d)
total = nrow(d)
table(t_ind)
# Standardized Differences
num0_a = abs(mean(lagos99_p[t_ind==1])- mean(lagos99_p[t_ind==0]))
den0_a = sqrt(  ( (sd(lagos99_p[t_ind==1]))^2 + (sd(lagos99_p[t_ind==0]))^2 )/2  )
sd0_a = num0_a/den0_a
sd0_a
num0_b = abs(mean(lavin99_p[t_ind==1])- mean(lavin99_p[t_ind==0]))
den0_b = sqrt(  ( (sd(lavin99_p[t_ind==1]))^2 + (sd(lavin99_p[t_ind==0]))^2 )/2  )
sd0_b = num0_b/den0_b
sd0_b
num0_c = abs(mean(nontraditional99_p[t_ind==1])- mean(nontraditional99_p[t_ind==0]))
den0_c = sqrt(  ( (sd(nontraditional99_p[t_ind==1]))^2 + (sd(nontraditional99_p[t_ind==0]))^2 )/2  )
sd0_c = num0_c/den0_c
sd0_c
num0_d = abs(mean(bachelet05_p[t_ind==1])- mean(bachelet05_p[t_ind==0]))
den0_d = sqrt(  ( (sd(bachelet05_p[t_ind==1]))^2 + (sd(bachelet05_p[t_ind==0]))^2 )/2  )
sd0_d = num0_d/den0_d
sd0_d
num0_e = abs(mean(lavinpinera05_p[t_ind==1])- mean(lavinpinera05_p[t_ind==0]))
den0_e = sqrt(  ( (sd(lavinpinera05_p[t_ind==1]))^2 + (sd(lavinpinera05_p[t_ind==0]))^2 )/2  )
sd0_e = num0_e/den0_e
sd0_e
num0_f = abs(mean(nontraditional05_p[t_ind==1])- mean(nontraditional05_p[t_ind==0]))
den0_f = sqrt(  ( (sd(nontraditional05_p[t_ind==1]))^2 + (sd(nontraditional05_p[t_ind==0]))^2 )/2  )
sd0_f = num0_f/den0_f
sd0_f
num0_g = abs(mean(frei09_p[t_ind==1])- mean(frei09_p[t_ind==0]))
den0_g = sqrt(  ( (sd(frei09_p[t_ind==1]))^2 + (sd(frei09_p[t_ind==0]))^2 )/2  )
sd0_g = num0_g/den0_g
sd0_g
num0_h = abs(mean(pinera09_p[t_ind==1])- mean(pinera09_p[t_ind==0]))
den0_h = sqrt(  ( (sd(pinera09_p[t_ind==1]))^2 + (sd(pinera09_p[t_ind==0]))^2 )/2  )
sd0_h = num0_h/den0_h
sd0_h
num0_i = abs(mean(nontraditional09_p[t_ind==1])- mean(nontraditional09_p[t_ind==0]))
den0_i = sqrt(  ( (sd(nontraditional09_p[t_ind==1]))^2 + (sd(nontraditional09_p[t_ind==0]))^2 )/2  )
sd0_i = num0_i/den0_i
sd0_i
num0_j = abs(mean(dimingresos03[t_ind==1])- mean(dimingresos03[t_ind==0]))
den0_j = sqrt(  ( (sd(dimingresos03[t_ind==1]))^2 + (sd(dimingresos03[t_ind==0]))^2 )/2  )
sd0_j = num0_j/den0_j
num0_k = abs(mean(dimedu03[t_ind==1])- mean(dimedu03[t_ind==0]))
den0_k = sqrt(  ( (sd(dimedu03[t_ind==1]))^2 + (sd(dimedu03[t_ind==0]))^2 )/2  )
sd0_k = num0_k/den0_k
sd0_k
num0_l = abs(mean(dimsalud03[t_ind==1])- mean(dimsalud03[t_ind==0]))
den0_l = sqrt(  ( (sd(dimsalud03[t_ind==1]))^2 + (sd(dimsalud03[t_ind==0]))^2 )/2  )
sd0_l = num0_l/den0_l
sd0_l
num0_m = abs(mean(poverty09[t_ind==1])- mean(poverty09[t_ind==0]))
den0_m = sqrt(  ( (sd(poverty09[t_ind==1]))^2 + (sd(poverty09[t_ind==0]))^2 )/2  )
sd0_m = num0_m/den0_m
num0_n = abs(mean(pop2002_5[t_ind==1])- mean(pop2002_5[t_ind==0]))
den0_n = sqrt(  ( (sd(pop2002_5[t_ind==1]))^2 + (sd(pop2002_5[t_ind==0]))^2 )/2  )
sd0_n = num0_n/den0_n
sd0_n
num0_o = abs(mean(propwomen02[t_ind==1])- mean(propwomen02[t_ind==0]))
den0_o = sqrt(  ( (sd(propwomen02[t_ind==1]))^2 + (sd(propwomen02[t_ind==0]))^2 )/2  )
sd0_o = num0_o/den0_o
sd0_o
num0_p = abs(mean(prop35above02[t_ind==1])- mean(prop35above02[t_ind==0]))
den0_p = sqrt(  ( (sd(prop35above02[t_ind==1]))^2 + (sd(prop35above02[t_ind==0]))^2 )/2  )
sd0_p = num0_p/den0_p
sd0_p
num0_q = abs(mean(rural02_p[t_ind==1])- mean(rural02_p[t_ind==0]))
den0_q = sqrt(  ( (sd(rural02_p[t_ind==1]))^2 + (sd(rural02_p[t_ind==0]))^2 )/2  )
sd0_q = num0_q/den0_q
sd0_q
##############################################
# Genetic Matching
##############################################
# Defining variables (Tr is treatment, Y is outcome, X are independent variables)
Tr <- cbind(t_ind)
Y <- cbind(matthei13_p)
X <- cbind(lagos99_p,lavin99_p,nontraditional99_p,
bachelet05_p,lavinpinera05_p,nontraditional05_p,
frei09_p,pinera09_p,nontraditional09_p,
dimingresos03,dimedu03,dimsalud03,poverty09,
pop2002_5,propwomen02,prop35above02,rural02_p)
#Let's call GenMatch() to find the optimal weight to give each
#covariate in 'X' so as we have achieved balance on the covariates in X.
genout <- GenMatch(Tr = Tr, X = X, BalanceMatrix = X,pop.size=1000,replace=FALSE) # pop.size = 10
# Now that GenMatch() has found the optimal weights, let's estimate our causal effect of interest using those weights
mout <- Match(Y = Y, Tr = Tr, X = X, estimand="ATT", M = 1, replace=FALSE,ties=FALSE, Weight.matrix = genout)
summary(mout)
#Let's determine if balance has actually been obtained on the variables of interest
MatchBalance(Tr ~ X, data = d, match.out = mout, nboots = 1000) # nboots = 0
# Check data
table(t_ind[mout$index.treated])
table(t_ind[mout$index.control])
genout <- GenMatch(Tr = Tr, X = X, BalanceMatrix = X,pop.size=100,replace=FALSE) # pop.size = 10
####################################
# Cross-sectional analysis
####################################
rm(list=ls())
library(lfe)
library(Hmisc)
library(plyr)
library(ggplot2)
library(reshape2)
library(xtable)
library(lmtest)
library(sandwich)
library(stargazer)
library(msm)
library(foreign)
library(gtools)
library(doBy)
library(arm)
################
# Prepare data
################
# Load data
d = read.dta("~/Dropbox/UP project (Chao-yo, Giancarlo, Ryan, Johannes)/Data/project_data/UP_fourth_merge.dta")
# Generate outcome variable
d$projects0216 = d$projects_y2015_2016 + d$projects_y2014_2015 + d$projects_y2013_2014 + d$projects_y2012_2013 +
d$projects_y2011_2012 + d$projects_y2010_2011 + d$projects_y2009_2010 + d$projects_y2008_2009 +
d$projects_y2007_2008 + d$projects_y2006_2007 + d$projects_y2005_2006 + d$projects_y2004_2005 +
d$projects_y2003_2004 + d$projects_y2002_2003
# Cross-sectional
d = d[d$year==2002,]
# Check outcome
table(d$projects0216,d$year)
# Gen new variable
d$SC_share = d$scpop/d$totpop
describe(d$SC_share)
# Project NAs=0
dim(d)
d = d[!is.na(d$projects0216),]
dim(d)
# drop if sc_share == 0 & sc_share == 1 for appendix
d2 = d[d$SC_share!=0,]
d2 = d2[d2$SC_share!=1,]
describe(d2$SC_share)
# Non-linear factor
d$SC_share_factor = NA
d$SC_share_factor[d$SC_share==0] = 0
d$SC_share_factor[d$SC_share>0 & d$SC_share<0.1] = 1
d$SC_share_factor[d$SC_share>=0.1 & d$SC_share<0.2] = 2
d$SC_share_factor[d$SC_share>=0.2 & d$SC_share<0.3] = 3
d$SC_share_factor[d$SC_share>=0.3 & d$SC_share<0.4] = 4
d$SC_share_factor[d$SC_share>=0.4 & d$SC_share<0.5] = 5
d$SC_share_factor[d$SC_share>=0.5 & d$SC_share<0.6] = 6
d$SC_share_factor[d$SC_share>=0.6 & d$SC_share<0.7] = 7
d$SC_share_factor[d$SC_share>=0.7 & d$SC_share<0.8] = 8
d$SC_share_factor[d$SC_share>=0.8 & d$SC_share<0.9] = 9
d$SC_share_factor[d$SC_share>=0.9 & d$SC_share<1] = 10
d$SC_share_factor[d$SC_share==1] = 11
d$SC_share_factor = as.factor(d$SC_share_factor)
table(d$SC_share_factor, exclude = NULL)
# Explore data
mean(d$projects0216)
mean(d$projects0216[d$SC_share_factor==0])  # SC_share==0
mean(d$projects0216[d$SC_share_factor==1])  # SC_share>0    & SC_share<0.1
mean(d$projects0216[d$SC_share_factor==2])  # SC_share>=0.1 & SC_share<0.2
mean(d$projects0216[d$SC_share_factor==3])  # SC_share>=0.2 & SC_share<0.3
mean(d$projects0216[d$SC_share_factor==4])  # SC_share>=0.3 & SC_share<0.4
mean(d$projects0216[d$SC_share_factor==5])  # SC_share>=0.4 & SC_share<0.5
mean(d$projects0216[d$SC_share_factor==6])  # SC_share>=0.5 & SC_share<0.6
mean(d$projects0216[d$SC_share_factor==7])  # SC_share>=0.6 & SC_share<0.7
mean(d$projects0216[d$SC_share_factor==8])  # SC_share>=0.7 & SC_share<0.8
mean(d$projects0216[d$SC_share_factor==9])  # SC_share>=0.8 & SC_share<0.9
mean(d$projects0216[d$SC_share_factor==10]) # SC_share>=0.9 & SC_share<1.0
mean(d$projects0216[d$SC_share_factor==11]) # SC_share==1.0
a0 = mean(d$projects0216[d$SC_share_factor==0])  # SC_share==0
a1 = mean(d$projects0216[d$SC_share_factor==1])  # SC_share>0    & SC_share<0.1
a2 = mean(d$projects0216[d$SC_share_factor==2])  # SC_share>=0.1 & SC_share<0.2
a3 = mean(d$projects0216[d$SC_share_factor==3])  # SC_share>=0.2 & SC_share<0.3
a4 = mean(d$projects0216[d$SC_share_factor==4])  # SC_share>=0.3 & SC_share<0.4
a5 = mean(d$projects0216[d$SC_share_factor==5])  # SC_share>=0.4 & SC_share<0.5
a6 = mean(d$projects0216[d$SC_share_factor==6])  # SC_share>=0.5 & SC_share<0.6
a7 = mean(d$projects0216[d$SC_share_factor==7])  # SC_share>=0.6 & SC_share<0.7
a8 = mean(d$projects0216[d$SC_share_factor==8])  # SC_share>=0.7 & SC_share<0.8
a9 = mean(d$projects0216[d$SC_share_factor==9])  # SC_share>=0.8 & SC_share<0.9
a10 = mean(d$projects0216[d$SC_share_factor==10]) # SC_share>=0.9 & SC_share<1.0
a11 = mean(d$projects0216[d$SC_share_factor==11]) # SC_share==1.0
# population
mean(d$totpop)
mean(d$totpop[d$SC_share_factor==0])  # SC_share==0
mean(d$totpop[d$SC_share_factor==1])  # SC_share>0    & SC_share<0.1
mean(d$totpop[d$SC_share_factor==2])  # SC_share>=0.1 & SC_share<0.2
mean(d$totpop[d$SC_share_factor==3])  # SC_share>=0.2 & SC_share<0.3
mean(d$totpop[d$SC_share_factor==4])  # SC_share>=0.3 & SC_share<0.4
mean(d$totpop[d$SC_share_factor==5])  # SC_share>=0.4 & SC_share<0.5
mean(d$totpop[d$SC_share_factor==6])  # SC_share>=0.5 & SC_share<0.6
mean(d$totpop[d$SC_share_factor==7])  # SC_share>=0.6 & SC_share<0.7
mean(d$totpop[d$SC_share_factor==8])  # SC_share>=0.7 & SC_share<0.8
mean(d$totpop[d$SC_share_factor==9])  # SC_share>=0.8 & SC_share<0.9
mean(d$totpop[d$SC_share_factor==10]) # SC_share>=0.9 & SC_share<1.0
mean(d$totpop[d$SC_share_factor==11]) # SC_share==1.0
# nhabitations
mean(d$nhabitations)
mean(d$nhabitations[d$SC_share_factor==0])  # SC_share==0
mean(d$nhabitations[d$SC_share_factor==1])  # SC_share>0    & SC_share<0.1
mean(d$nhabitations[d$SC_share_factor==2])  # SC_share>=0.1 & SC_share<0.2
mean(d$nhabitations[d$SC_share_factor==3])  # SC_share>=0.2 & SC_share<0.3
mean(d$nhabitations[d$SC_share_factor==4])  # SC_share>=0.3 & SC_share<0.4
mean(d$nhabitations[d$SC_share_factor==5])  # SC_share>=0.4 & SC_share<0.5
mean(d$nhabitations[d$SC_share_factor==6])  # SC_share>=0.5 & SC_share<0.6
mean(d$nhabitations[d$SC_share_factor==7])  # SC_share>=0.6 & SC_share<0.7
mean(d$nhabitations[d$SC_share_factor==8])  # SC_share>=0.7 & SC_share<0.8
mean(d$nhabitations[d$SC_share_factor==9])  # SC_share>=0.8 & SC_share<0.9
mean(d$nhabitations[d$SC_share_factor==10]) # SC_share>=0.9 & SC_share<1.0
mean(d$nhabitations[d$SC_share_factor==11]) # SC_share==1.0
# Projects cutoff
describe(d$habitation[d$projects0216>100])
describe(d$habitation[d$projects0216<101])
(283/ (283 + 235975))*100 # percentage of excluded habitations because of extreme values
describe(d$projects0216[d$projects0216>100])
d = d[d$projects0216<101,]
((236258-235975)/236258)*100 # percentage of excluded habitations because of missing values
#########################################
# Figures and Tables
#########################################
# 4.1 Dependent Variable: Handpumps
describe(d$projects0216)
describe(d$projects0216==0)
describe(d$projects0216>10)
describe(d$projects0216>50)
table(d$projects0216, exclude = NULL)
hist(d$projects0216)
describe(d$SC_share[d$nhabitations==1]) # habitations
describe(d$SC_share[d$nhabitations==2])
describe(d$SC_share[d$nhabitations==3])
cor(d$SC_share,d$logpop) # correlation
cairo_pdf(file="~/Dropbox/UP project (Chao-yo, Giancarlo, Ryan, Johannes)/Manuscript/Figures/hist_projects.pdf",
width=7,
height=7)
ggplot(d, aes(x = projects0216)) + geom_histogram(binwidth=1) + labs(x="Projects", y="Count") + theme(legend.key = element_rect(colour = NA)) + theme_bw() + scale_y_continuous(breaks=c(0,10000,20000,30000,40000,50000)) + coord_cartesian(ylim=c(0,50000))
dev.off()
# 4.2 Explanatory Variable: Scheduled Caste Population
cairo_pdf(file="~/Dropbox/UP project (Chao-yo, Giancarlo, Ryan, Johannes)/Manuscript/Figures/hist_SC.pdf",
width=7,
height=7)
ggplot(d, aes(x = SC_share)) + geom_histogram(binwidth = 0.05) + labs(x="SC Share", y="Count") + theme(legend.key = element_rect(colour = NA)) + theme_bw() + scale_y_continuous(breaks=c(0,25000,50000,75000,100000)) + coord_cartesian(ylim=c(0,100000))
dev.off()
# MAIN RESULTS: CROSS-SECTION OF TOTAL PROJECTS, TABLE WITH/WITHOUT VILLAGE FE, SE CLUSTERING
# NO FE
reg_001 = felm(d$projects0216 ~ d$SC_share | 0 | 0 | d$lc01_con_id)
summary(reg_001)
reg_002 = felm(d$projects0216 ~ d$SC_share + log(d$totpop) | 0 | 0 | d$lc01_con_id)
summary(reg_002)
# FE
reg_003 = felm(d$projects0216 ~ d$SC_share | as.factor(d$townvillage)| 0 | d$lc01_con_id)
summary(reg_003)
reg_004 = felm(d$projects0216 ~ d$SC_share + log(d$totpop) | as.factor(d$townvillage)| 0 | d$lc01_con_id)
summary(reg_004)
# Table Cross-sectional
describe(d$lc01_con_id)
describe(d$townvillage)
stargazer(reg_001,reg_002,reg_003,reg_004,
float = F,
type = "text",
title="Regression results",
align=TRUE,
omit.stat=c("LL","ser","f","rsq","adj.rsq"),
no.space=TRUE,
multicolumn = TRUE,
table.placement = "H",
covariate.labels = c("SC share","Log population"),
dep.var.caption  = "Projects",
dep.var.labels.include = FALSE,
omit = c("Constant","townvillage"),
add.lines = list(c("Village fixed effects","No","No","Yes","Yes"),
c("Number of villages","86,834","86,834","86,834","86,834")),
out="~/Dropbox/UP project (Chao-yo, Giancarlo, Ryan, Johannes)/Manuscript/Tables/results_cross_sec.tex")
# Non linear
projects0216 = c(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)
sc_share = c("[0]","[0-10]","[10-20]","[20-30]","[30-40]","[40-50]","[50-60]","[60-70]","[70-80]","[80-90]","[90-100]","[100]")
sc_share_f = as.factor(sc_share)
print(levels(sc_share_f))
sc_share_f = factor(sc_share_f,levels(sc_share_f)[c(2,1,3,5,6,7,8,9,10,11,12,4)])
print(levels(sc_share_f))
plot = data.frame(projects0216,sc_share)
pdf(file = "~/Dropbox/UP project (Chao-yo, Giancarlo, Ryan, Johannes)/Manuscript/Figures/figure_nonlinear.pdf")
ggplot(plot, aes(x = sc_share_f, y = projects0216)) + geom_point() + labs(x="SC Share (percent)", y="Projects (average)") + theme(legend.key = element_rect(colour = NA)) + theme_bw() + scale_y_continuous(breaks=c(0,1,2,3,4,5,6,7,8,9,10)) + coord_cartesian(ylim=c(0,10))
dev.off()
