table(d$year_of_birth, exclude = NULL)
d$year_miss = 0
d$year_miss[d$year_of_birth==999999]=1
table(d$year_miss)
table(d$cep,d$year_miss)
table(d$ideology_label, exclude = NULL)
table(d$cep,d$ideology_label, exclude = NULL)
table(d$year_miss)
table(d$cep,d$year_miss)
####################################
# Main effect RDD
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)
################
# Prepare data
################
# reada data
d = read.dta13("~/Dropbox/Plebiscite Chile/01_data/clean data/cep_data_05feb2019.dta")
names(d)
table(d$cep, exclude = NULL)
table(d$cep,d$ideology_label)
# check data
table(d$year_of_birth, exclude = NULL)
d$year_miss = 0
d$year_miss[d$year_of_birth==999999]=1
table(d$year_miss)
table(d$cep,d$year_miss)
table(d$ideology_label, exclude = NULL)
table(d$cep,d$ideology_label, exclude = NULL)
# year of birth
table(d$year_of_birth, exclude = NULL)
d$year_of_birth[d$year_of_birth==99]=NA
d$year_of_birth[d$year_of_birth==2090]=NA
d$year_of_birth[d$year_of_birth==9999]=NA
d$year_of_birth[d$year_of_birth==999999]=NA
d$year_of_birth[d$year_of_birth==""]=NA
table(d$year_of_birth, exclude = NULL)
table(d$month_of_birth, exclude = NULL)
d$month_of_birth[d$month_of_birth==13]=NA
d$month_of_birth[d$month_of_birth==99]=NA
d$month_of_birth[d$month_of_birth==999999]=NA
d$month_of_birth[d$month_of_birth==""]=NA
table(d$month_of_birth, exclude = NULL)
table(d$day_of_birth, exclude = NULL)
d$day_of_birth[d$day_of_birth==0]=NA
d$day_of_birth[d$day_of_birth==39]=NA
d$day_of_birth[d$day_of_birth==99]=NA
d$day_of_birth[d$day_of_birth==999999]=NA
d$day_of_birth[d$day_of_birth==""]=NA
table(d$day_of_birth, exclude = NULL)
# subset
d = d[!is.na(d$year_of_birth),]
d = d[!is.na(d$month_of_birth),]
d = d[!is.na(d$day_of_birth),]
table(d$year_of_birth, exclude = NULL)
table(d$month_of_birth, exclude = NULL)
table(d$day_of_birth, exclude = NULL)
# margin
d$year_of_birth = as.numeric(d$year_of_birth)
d$month_of_birth = as.numeric(d$month_of_birth)
d$day_of_birth = as.numeric(d$day_of_birth)
d$birthday <- paste(d$year_of_birth, d$month_of_birth,d$day_of_birth, sep = "-")
describe(d$birthday)
d$eligibility = "1970-10-05"
d$margin = as.Date(as.character(d$eligibility), format="%Y-%m-%d") - as.Date(as.character(d$birthday), format="%Y-%m-%d")
d$margin = as.numeric(d$margin)
describe(d$margin)
d = d[!is.na(d$margin),] # imposible birthdates
d$margin[d$margin>=0] = d$margin[d$margin>=0] + 1
describe(d$margin)
table(d$cep, exclude = NULL)
# treatment
d$treatment = 0
d$treatment[d$margin>0]=1
table(d$treatment)
table(d$margin[d$treatment==1])
table(d$margin[d$treatment==0])
# ideological outcomes
table(d$ideology_label, exclude = NULL)
d$ideology_label = as.numeric(d$ideology_label)
table(d$ideology_label, exclude = NULL)
d$ideo_label = d$ideology_label
d$ideo_label[d$ideo_label>5] = NA
table(d$ideo_label, exclude = NULL)
table(d$cep,d$ideo_label)
d$ideo_bin = 0
d$ideo_bin[d$ideology_label==1] = 1
d$ideo_bin[d$ideology_label==2] = 1
d$ideo_bin[d$ideology_label==3] = 1
d$ideo_bin[d$ideology_label==4] = 1
d$ideo_bin[d$ideology_label==5] = 1
d$ideo_bin[d$ideology_label==6] = 0
d$ideo_bin[d$ideology_label==7] = 0
table(d$ideo_bin, exclude = NULL)
#d = d[!is.na(d$ideo_bin),]
#table(d$ideo_bin, exclude = NULL)
d$right = 0
d$right[d$ideo_label==1]=1
d$right[d$ideo_label==2]=1
table(d$right)
d$left = 0
d$left[d$ideo_label==4]=1
d$left[d$ideo_label==5]=1
table(d$left)
d$center = 0
d$center[d$ideo_label==3]=1
table(d$center)
# drop no ideological label
table(d$cep,d$ideology_label)
####################################
# Main effect RDD
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)
################
# Prepare data
################
# reada data
d = read.dta13("~/Dropbox/Plebiscite Chile/01_data/clean data/cep_data_05feb2019.dta")
names(d)
table(d$cep, exclude = NULL)
table(d$cep,d$ideology_label)
# check data
table(d$year_of_birth, exclude = NULL)
d$year_miss = 0
d$year_miss[d$year_of_birth==999999]=1
table(d$year_miss)
table(d$cep,d$year_miss)
table(d$ideology_label, exclude = NULL)
table(d$cep,d$ideology_label, exclude = NULL)
# year of birth
table(d$year_of_birth, exclude = NULL)
d$year_of_birth[d$year_of_birth==99]=NA
d$year_of_birth[d$year_of_birth==2090]=NA
d$year_of_birth[d$year_of_birth==9999]=NA
d$year_of_birth[d$year_of_birth==999999]=NA
d$year_of_birth[d$year_of_birth==""]=NA
table(d$year_of_birth, exclude = NULL)
table(d$month_of_birth, exclude = NULL)
d$month_of_birth[d$month_of_birth==13]=NA
d$month_of_birth[d$month_of_birth==99]=NA
d$month_of_birth[d$month_of_birth==999999]=NA
d$month_of_birth[d$month_of_birth==""]=NA
table(d$month_of_birth, exclude = NULL)
table(d$day_of_birth, exclude = NULL)
d$day_of_birth[d$day_of_birth==0]=NA
d$day_of_birth[d$day_of_birth==39]=NA
d$day_of_birth[d$day_of_birth==99]=NA
d$day_of_birth[d$day_of_birth==999999]=NA
d$day_of_birth[d$day_of_birth==""]=NA
table(d$day_of_birth, exclude = NULL)
# subset
d = d[!is.na(d$year_of_birth),]
d = d[!is.na(d$month_of_birth),]
d = d[!is.na(d$day_of_birth),]
table(d$year_of_birth, exclude = NULL)
table(d$month_of_birth, exclude = NULL)
table(d$day_of_birth, exclude = NULL)
# margin
d$year_of_birth = as.numeric(d$year_of_birth)
d$month_of_birth = as.numeric(d$month_of_birth)
d$day_of_birth = as.numeric(d$day_of_birth)
d$birthday <- paste(d$year_of_birth, d$month_of_birth,d$day_of_birth, sep = "-")
describe(d$birthday)
d$eligibility = "1970-10-05"
d$margin = as.Date(as.character(d$eligibility), format="%Y-%m-%d") - as.Date(as.character(d$birthday), format="%Y-%m-%d")
d$margin = as.numeric(d$margin)
describe(d$margin)
d = d[!is.na(d$margin),] # imposible birthdates
d$margin[d$margin>=0] = d$margin[d$margin>=0] + 1
describe(d$margin)
table(d$cep, exclude = NULL)
# treatment
d$treatment = 0
d$treatment[d$margin>0]=1
table(d$treatment)
table(d$margin[d$treatment==1])
table(d$margin[d$treatment==0])
# ideological outcomes
table(d$ideology_label, exclude = NULL)
d$ideology_label = as.numeric(d$ideology_label)
table(d$ideology_label, exclude = NULL)
d$ideo_label = d$ideology_label
d$ideo_label[d$ideo_label>5] = NA
table(d$ideo_label, exclude = NULL)
table(d$cep,d$ideo_label)
d$ideo_bin = 0
d$ideo_bin[d$ideology_label==1] = 1
d$ideo_bin[d$ideology_label==2] = 1
d$ideo_bin[d$ideology_label==3] = 1
d$ideo_bin[d$ideology_label==4] = 1
d$ideo_bin[d$ideology_label==5] = 1
d$ideo_bin[d$ideology_label==6] = 0
d$ideo_bin[d$ideology_label==7] = 0
table(d$ideo_bin, exclude = NULL)
#d = d[!is.na(d$ideo_bin),]
#table(d$ideo_bin, exclude = NULL)
d$right = 0
d$right[d$ideo_label==1]=1
d$right[d$ideo_label==2]=1
table(d$right)
d$left = 0
d$left[d$ideo_label==4]=1
d$left[d$ideo_label==5]=1
table(d$left)
d$center = 0
d$center[d$ideo_label==3]=1
table(d$center)
# drop no ideological label
table(d$cep,d$ideology_label)
d = d[d$cep!=52,]
d = d[d$cep!=55,]
d = d[d$cep!=79,]
d = d[d$cep!=80,]
table(d$cep)
table(d$comuna, exclude = NULL)
####################################
# Aligned adjacent municipality analysis
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)
library(gridExtra)
# load function that does clustered SEs
vcovCluster <- function(
model,
cluster
)
{
require(sandwich)
require(lmtest)
if(nrow(model.matrix(model))!=length(cluster)){
stop("check your data: cluster variable has different N than model")
}
M <- length(unique(cluster))
N <- length(cluster)
K <- model$rank
if(M<40){
warning("Fewer than 40 clusters, variances may be unreliable")
}
dfc <- (M/(M - 1)) * ((N - 1)/(N - K))
uj  <- apply(estfun(model), 2, function(x) tapply(x, cluster, sum));
rcse.cov <- dfc * sandwich(model, meat = crossprod(uj)/N)
return(rcse.cov)
}
################
# Prepare data
################
# reada data
d =  read.dta13("~/Dropbox/Crime Chile/01_data/clean data/local_crime_data_chile_2019april26.dta")
names(d)
# control
d$t_spill2 = 1 - d$t_spill
# spill
table(d$t_spill)
table(d$total_adjacent_county)
##############################################################################################
# Aligned adjacent municipalitys 1: Interaction with binary indicator: Property street crime
##############################################################################################
# main regression
d2 = d[!is.na(d$propstreetcrime_s),]
d2 = d2[d2$total_adjacent_county!=0,]
h1 = rdbwselect(d2$propstreetcrime_s,d2$margin,cluster = d2$cluster)$bws[1]
X = d2$margin
center = 0
bw = h1
d2$kweights = kernelwts(X, center, bw, kernel = "triangular")
# interaction 1
reg1 = lm(d2$propstreetcrime_s ~ d2$ruling + d2$t_spill + d2$t_spill*d2$ruling + d2$margin, weights = d2$kweights)
reg1_c <- round(coeftest(reg1, vcov = vcovCluster(reg1, cluster = d2$cluster)),4)
reg1_c
reg1 = lm(d2$propstreetcrime_s ~ d2$ruling + d2$t_spill + d2$t_spill*d2$ruling, weights = d2$kweights)
reg1_c <- round(coeftest(reg1, vcov = vcovCluster(reg1, cluster = d2$cluster)),4)
reg1_c
# interaction 1
reg1 = lm(d2$propstreetcrime_s ~ d2$ruling + d2$t_spill + d2$t_spill*d2$ruling + d2$margin, weights = d2$kweights)
reg1_c <- round(coeftest(reg1, vcov = vcovCluster(reg1, cluster = d2$cluster)),4)
reg1_c
bw
length(d2$propstreetcrime_s[d2$kweights!=0])
##############################
# Outcomes t-test
##############################
rm(list=ls())
###############################
# Prepare inmigration
###############################
rm(list=ls())
library(Hmisc)
library(readstata13)
library(foreign)
library(tidyverse)
library(did)
############################
# Read and prepare data
############################
# load data
d = read.dta13("~/Dropbox/Immigration Chile/01_data/raw_data/clean_data_cep_immigration_08nov2019.dta")
d_original = d
head(d)
names(d)
############################
# All visas
############################
# generate outcome
d$crime_priority = 0
d$crime_priority[d$first_problem==3] = 1
d$crime_priority[d$second_problem==3] = 1
d$crime_priority[d$third_problem==3] = 1
table(d$crime_priority)
d$crime_first = 0
d$crime_first[d$first_problem==3] = 1
table(d$crime_first)
d$crime_second = 0
d$crime_second[d$second_problem==3] = 1
table(d$crime_second)
d$crime_third = 0
d$crime_third[d$third_problem==3] = 1
table(d$crime_third)
# year
d$year = NA
d$year[d$fecha=="november-2014"]=2014
d$year[d$fecha=="july-2014"]=2014
d$year[d$fecha=="april-2015"]=2015
d$year[d$fecha=="august-2015"]=2015
d$year[d$fecha=="november-2015"]=2015
d$year[d$fecha=="july-2016"]=2016
d$year[d$fecha=="november-2016"]=2016
d$year[d$fecha=="april-2017"]=2017
d$year[d$fecha=="july-2017"]=2017
d$year[d$fecha=="september-2017"]=2017
table(d$year, exclude = NULL)
# survey
d$survey = NA
d$survey[d$fecha=="november-2014"]= 2
d$survey[d$fecha=="july-2014"]= 1
d$survey[d$fecha=="april-2015"]= 3
d$survey[d$fecha=="august-2015"]= 4
d$survey[d$fecha=="november-2015"]= 5
d$survey[d$fecha=="july-2016"]= 6
d$survey[d$fecha=="november-2016"]= 7
d$survey[d$fecha=="april-2017"]= 8
d$survey[d$fecha=="july-2017"]= 9
d$survey[d$fecha=="september-2017"]= 10
table(d$survey, exclude = NULL)
# drop missing values for covariates
d = d[!is.na(d$education),]
d = d[!is.na(d$age_bins),]
d = d[!is.na(d$pop2002),]
d = d[!is.na(d$IDH03),]
d = d[!is.na(d$delitos_connotacion_social_6),]
d = d[!is.na(d$visas_24),]
# change between year 2 and year 1 (change in %)
d$visas_year2 = d$haiti_n_24-d$haiti_n_12
d$visas_year1 = d$haiti_n_12
d$visas_year2[d$visas_year2==0 & d$visas_year1>0] <- d$visas_year1[d$visas_year2==0 & d$visas_year1>0]*0.1
d$change = (d$visas_year1 - d$visas_year2)/d$visas_year2
d$change[d$change=="NaN"] = 0
describe(d$change)
mean(d$change, na.rm = T)
sd(d$change, na.rm = T)
min(d$change, na.rm = T)
# mean and sd
mean_1 = mean(d$change[d$survey==1], na.rm = T)
mean_2 = mean(d$change[d$survey==2], na.rm = T)
mean_3 = mean(d$change[d$survey==3], na.rm = T)
mean_4 = mean(d$change[d$survey==4], na.rm = T)
mean_5 = mean(d$change[d$survey==5], na.rm = T)
mean_6 = mean(d$change[d$survey==6], na.rm = T)
mean_7 = mean(d$change[d$survey==7], na.rm = T)
mean_8 = mean(d$change[d$survey==8], na.rm = T)
mean_9 = mean(d$change[d$survey==9], na.rm = T)
mean_10 = mean(d$change[d$survey==10], na.rm = T)
mean_total = mean(d$change, na.rm = T)
sd_1 = sd(d$change[d$survey==1], na.rm = T)*1.3
sd_2 = sd(d$change[d$survey==2], na.rm = T)*1.3
sd_3 = sd(d$change[d$survey==3], na.rm = T)*1.3
sd_4 = sd(d$change[d$survey==4], na.rm = T)*1.3
sd_5 = sd(d$change[d$survey==5], na.rm = T)*1.3
sd_6 = sd(d$change[d$survey==6], na.rm = T)*1.3
sd_7 = sd(d$change[d$survey==7], na.rm = T)*1.3
sd_8 = sd(d$change[d$survey==8], na.rm = T)*1.3
sd_9 = sd(d$change[d$survey==9], na.rm = T)*1.3
sd_10 = sd(d$change[d$survey==10], na.rm = T)*1.3
sd_total = sd(d$change, na.rm = T)*1.3
# treatment
d$t_ind = 0
d$t_ind[d$survey==1 & d$change >= (mean_1 + sd_1)] = 1
d$t_ind[d$survey==2 & d$change >= (mean_2 + sd_2)] = 1
d$t_ind[d$survey==3 & d$change >= (mean_3 + sd_3)] = 1
d$t_ind[d$survey==4 & d$change >= (mean_4 + sd_4)] = 1
d$t_ind[d$survey==5 & d$change >= (mean_5 + sd_5)] = 1
d$t_ind[d$survey==6 & d$change >= (mean_6 + sd_6)] = 1
d$t_ind[d$survey==7 & d$change >= (mean_7 + sd_7)] = 1
d$t_ind[d$survey==8 & d$change >= (mean_8 + sd_8)] = 1
d$t_ind[d$survey==9 & d$change >= (mean_9 + sd_9)] = 1
d$t_ind[d$survey==10 & d$change >= (mean_10 + sd_10)] = 1
table(d$t_ind, exclude = NULL)
d$t_ind_2 = d$t_ind
d$t_ind_2[is.na(d$t_ind)] = 2
table(d$t_ind_2,d$t_ind, exclude = NULL)
d$first_treatment = 99
d$first_treatment[d$survey==10 & d$t_ind_2==1] = 10
d$first_treatment[d$survey==9 & d$t_ind_2==1] = 9
d$first_treatment[d$survey==8 & d$t_ind_2==1] = 8
d$first_treatment[d$survey==7 & d$t_ind_2==1] = 7
d$first_treatment[d$survey==6 & d$t_ind_2==1] = 6
d$first_treatment[d$survey==5 & d$t_ind_2==1] = 5
d$first_treatment[d$survey==4 & d$t_ind_2==1] = 4
d$first_treatment[d$survey==3 & d$t_ind_2==1] = 3
d$first_treatment[d$survey==2 & d$t_ind_2==1] = 2
d$first_treatment[d$survey==1 & d$t_ind_2==1] = 1
table(d$first_treatment)
county_first  = tapply(d$first_treatment,d$county,min)
counties = labels(county_first)
first = as.numeric(county_first)
dd = data.frame(counties,first)
colnames(dd) = c("county","first")
dd$first[dd$first==99] = 0
table(dd$first)
d$first.treat = NA
for (i in d$county) {
d$first.treat[d$county == i] = dd$first[dd$county == i]
}
table(d$first.treat, exclude = NULL)
############################
# New data structure
############################
crime_1 = tapply(d$crime_priority[d$survey==1],d$county[d$survey==1],mean)
crime_2 = tapply(d$crime_priority[d$survey==2],d$county[d$survey==2],mean)
crime_3 = tapply(d$crime_priority[d$survey==3],d$county[d$survey==3],mean)
crime_4 = tapply(d$crime_priority[d$survey==4],d$county[d$survey==4],mean)
crime_5 = tapply(d$crime_priority[d$survey==5],d$county[d$survey==5],mean)
crime_6 = tapply(d$crime_priority[d$survey==6],d$county[d$survey==6],mean)
crime_7 = tapply(d$crime_priority[d$survey==7],d$county[d$survey==7],mean)
crime_8 = tapply(d$crime_priority[d$survey==8],d$county[d$survey==8],mean)
crime_9 = tapply(d$crime_priority[d$survey==9],d$county[d$survey==9],mean)
crime_10 = tapply(d$crime_priority[d$survey==10],d$county[d$survey==10],mean)
crime = c(crime_1,crime_2,crime_3,crime_4,crime_5,crime_6,crime_7,crime_8,crime_9,crime_10)
county = labels(crime)
county_name = as.factor(county)
county = as.numeric(county_name)
first.treat_unique_1 = tapply(d$first.treat[d$survey==1],d$county[d$survey==1],unique)
first.treat_unique_2 = tapply(d$first.treat[d$survey==2],d$county[d$survey==2],unique)
first.treat_unique_3 = tapply(d$first.treat[d$survey==3],d$county[d$survey==3],unique)
first.treat_unique_4 = tapply(d$first.treat[d$survey==4],d$county[d$survey==4],unique)
first.treat_unique_5 = tapply(d$first.treat[d$survey==5],d$county[d$survey==5],unique)
first.treat_unique_6 = tapply(d$first.treat[d$survey==6],d$county[d$survey==6],unique)
first.treat_unique_7 = tapply(d$first.treat[d$survey==7],d$county[d$survey==7],unique)
first.treat_unique_8 = tapply(d$first.treat[d$survey==8],d$county[d$survey==8],unique)
first.treat_unique_9 = tapply(d$first.treat[d$survey==9],d$county[d$survey==9],unique)
first.treat_unique_10 = tapply(d$first.treat[d$survey==10],d$county[d$survey==10],unique)
first.treat = c(first.treat_unique_1,first.treat_unique_2,first.treat_unique_3,first.treat_unique_4,first.treat_unique_5,
first.treat_unique_6,first.treat_unique_7,first.treat_unique_8,first.treat_unique_9,first.treat_unique_10)
survey_1 = rep(1, length(first.treat_unique_1))
survey_2 = rep(2, length(first.treat_unique_2))
survey_3 = rep(3, length(first.treat_unique_3))
survey_4 = rep(4, length(first.treat_unique_4))
survey_5 = rep(5, length(first.treat_unique_5))
survey_6 = rep(6, length(first.treat_unique_6))
survey_7 = rep(7, length(first.treat_unique_7))
survey_8 = rep(8, length(first.treat_unique_8))
survey_9 = rep(9, length(first.treat_unique_9))
survey_10 = rep(10, length(first.treat_unique_10))
survey = c(survey_1,survey_2,survey_3,survey_4,survey_5,survey_6,survey_7,survey_8,survey_9,survey_10)
t_ind_1 = tapply(d$t_ind[d$survey==1],d$county[d$survey==1],mean)
t_ind_2 = tapply(d$t_ind[d$survey==2],d$county[d$survey==2],mean)
t_ind_3 = tapply(d$t_ind[d$survey==3],d$county[d$survey==3],mean)
t_ind_4 = tapply(d$t_ind[d$survey==4],d$county[d$survey==4],mean)
t_ind_5 = tapply(d$t_ind[d$survey==5],d$county[d$survey==5],mean)
t_ind_6 = tapply(d$t_ind[d$survey==6],d$county[d$survey==6],mean)
t_ind_7 = tapply(d$t_ind[d$survey==7],d$county[d$survey==7],mean)
t_ind_8 = tapply(d$t_ind[d$survey==8],d$county[d$survey==8],mean)
t_ind_9 = tapply(d$t_ind[d$survey==9],d$county[d$survey==9],mean)
t_ind_10 = tapply(d$t_ind[d$survey==10],d$county[d$survey==10],mean)
t_ind = c(t_ind_1,t_ind_2,t_ind_3,t_ind_4,t_ind_5,t_ind_6,t_ind_7,t_ind_8,t_ind_9,t_ind_10)
d_new = data.frame(survey,crime,county,county_name,first.treat,t_ind)
# save dataset
save(d,d_new, file = "~/Dropbox/Immigration Chile/01_data/clean_data/clean_haiti_survey_13sd_2021sept22.RData")
#######################
# Results
#######################
# outcome all per survey
out1 <- att_gt(yname = "crime",
gname = "first.treat",
idname = "county",
tname = "survey",
xformla = ~1,
data = d_new,
est_method = "reg"
)
es1 <- aggte(out1, type = "dynamic")
ggdid(es1)
describe(d_new$county)
