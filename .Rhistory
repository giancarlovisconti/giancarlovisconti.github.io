d3$instrumented_spelling_english <- first.stage.3$fitted.values
# CACE non-standardized
cace3 = lm(spelling ~ instrumented_spelling_english + score + woman + age + usborn + as.factor(year), weights = kweights_spelling, data = d3)
cace3_c = round(coeftest(cace3, vcov = vcovCluster(cace3, cluster = d3$CLS1_ID)),4)
cace3_c
# CACE standardized
cace3b = lm(spelling_s ~ instrumented_spelling_english + score + woman + age + usborn + as.factor(year), weights = kweights_spelling, data = d3)
cace3b_c = round(coeftest(cace3b, vcov = vcovCluster(cace3b, cluster = d3$CLS1_ID)),4)
cace3b_c
##################
# CACE plot
##################
pe_math = cace1b_c[2,1]
se_math = cace1b_c[2,2]
lower95_math = pe_math - se_math*1.960
upper95_math = pe_math + se_math*1.960
pe_letter = cace2b_c[2,1]
se_letter = cace2b_c[2,2]
lower95_letter = pe_letter - se_letter*1.960
upper95_letter = pe_letter + se_letter*1.960
pe_spelling = cace3b_c[2,1]
se_spelling = cace3b_c[2,2]
lower95_spelling = pe_spelling - se_spelling*1.960
upper95_spelling = pe_spelling + se_spelling*1.960
pe_cace = rbind(pe_math,pe_letter)
se_cace = rbind(se_math,se_letter)
upper95_cace = rbind(upper95_math,upper95_letter)
lower95_cace = rbind(lower95_math,lower95_letter)
outcome_cace = c("Math","Letter")
results_cace = data.frame(pe_cace,se_cace,lower95_cace,upper95_cace,outcome_cace)
results_cace$outcome_cace <- factor(results_cace$outcome_cace, levels = c("Letter","Math"))
head(results_cace)
tiff('~/Dropbox/DLL Assessments/03_manuscript/figures/cace_math_letter.tiff', units="in", width=5, height=5, res=600, compression = 'lzw')
ggplot(results_cace, aes(x=outcome_cace, y=pe_cace)) +
geom_hline(yintercept=0, size=1, color = "gray", linetype = 1) +
coord_flip(ylim = c(-1, 1)) +
geom_pointrange(aes(ymin=lower95_cace,ymax=upper95_cace),size=1,position = position_dodge(0.9)) +
theme(legend.position="none") + theme(axis.text=element_text(size=12)) +
theme_bw() +
ylab("CACE") +
xlab("Outcome")
dev.off()
#######################
# Multiple Bandwidths
#######################
# Math
d1$kweights_math_sd_1 = kernelwts(d1$score, 0, bw = 2.95, kernel = "triangular")
cace_math_1 = lm(math_sd_s ~ instrumented_math_english + score + usborn + woman + age + as.factor(year), weights = kweights_math_sd_1, data = d1)
cace_math_1_c = round(coeftest(cace_math_1, vcov = vcovCluster(cace_math_1, cluster = d1$CLS1_ID)),4)
cace_math_1_c
d1$kweights_math_sd_2 = kernelwts(d1$score, 0, bw = 3.00, kernel = "triangular")
cace_math_2 = lm(math_sd_s ~ instrumented_math_english + score + usborn + woman + age + as.factor(year), weights = kweights_math_sd_2, data = d1)
cace_math_2_c = round(coeftest(cace_math_2, vcov = vcovCluster(cace_math_2, cluster = d1$CLS1_ID)),4)
cace_math_2_c
d1$kweights_math_sd_3 = kernelwts(d1$score, 0, bw = 3.05, kernel = "triangular")
cace_math_3 = lm(math_sd_s ~ instrumented_math_english + score + usborn + woman + age + as.factor(year), weights = kweights_math_sd_3, data = d1)
cace_math_3_c = round(coeftest(cace_math_3, vcov = vcovCluster(cace_math_3, cluster = d1$CLS1_ID)),4)
cace_math_1_c
d1$kweights_math_sd_4 = kernelwts(d1$score, 0, bw = 3.10, kernel = "triangular")
cace_math_4 = lm(math_sd_s ~ instrumented_math_english + score + usborn + woman + age + as.factor(year), weights = kweights_math_sd_4, data = d1)
cace_math_4_c = round(coeftest(cace_math_4, vcov = vcovCluster(cace_math_4, cluster = d1$CLS1_ID)),4)
cace_math_4_c
d1$kweights_math_sd_5 = kernelwts(d1$score, 0, bw = 3.15, kernel = "triangular")
cace_math_5 = lm(math_sd_s ~ instrumented_math_english + score + usborn + woman + age + as.factor(year), weights = kweights_math_sd_5, data = d1)
cace_math_5_c = round(coeftest(cace_math_5, vcov = vcovCluster(cace_math_5, cluster = d1$CLS1_ID)),4)
cace_math_5_c
pe_1 = cace_math_1_c[2,1]
se_1 = cace_math_1_c[2,2]
lower95_1 = pe_1 - se_1*1.960
upper95_1 = pe_1 + se_1*1.960
pe_2 = cace_math_2_c[2,1]
se_2 = cace_math_2_c[2,2]
lower95_2 = pe_2 - se_2*1.960
upper95_2 = pe_2 + se_2*1.960
pe_3 = cace_math_3_c[2,1]
se_3 = cace_math_3_c[2,2]
lower95_3 = pe_3 - se_3*1.960
upper95_3 = pe_3 + se_3*1.960
pe_4 = cace_math_4_c[2,1]
se_4 = cace_math_4_c[2,2]
lower95_4 = pe_4 - se_4*1.960
upper95_4 = pe_4 + se_4*1.960
pe_5 = cace_math_5_c[2,1]
se_5 = cace_math_5_c[2,2]
lower95_5 = pe_5 - se_5*1.960
upper95_5 = pe_5 + se_5*1.960
pe_math = rbind(pe_1,pe_2,pe_3,pe_4,pe_5)
se_math = rbind(se_1,se_2,se_3,se_4,se_5)
upper95_math = rbind(upper95_1,upper95_2,upper95_3,upper95_4,upper95_5)
lower95_math = rbind(lower95_1,lower95_2,lower95_3,lower95_4,lower95_5)
bw_math = c(2.95,3.00,3.05,3.10,3.15)
results_math = data.frame(pe_math,se_math,lower95_math,upper95_math,bw_math)
head(results_math)
tiff('~/Dropbox/DLL Assessments/03_manuscript/figures/cace_math_bws.tiff', units="in", width=5, height=5, res=600, compression = 'lzw')
ggplot(results_math, aes(x=bw_math, y=pe_math)) +
geom_hline(yintercept=0, size=1, color = "gray", linetype = 1) +
coord_flip(ylim = c(-0.5, 0.5),xlim = c(2.95,3.15)) +
geom_pointrange(aes(ymin=lower95_math,ymax=upper95_math),size=0.5,position = position_dodge(0.9)) +
theme(legend.position="none") +
theme(axis.text=element_text(size=12)) +
theme_bw() +
ylab("CACE on Math") +
xlab("Bandwidths")
dev.off()
# Letter
d2$kweights_letter_word_1 = kernelwts(d2$score, 0, bw = 2.8, kernel = "triangular")
cace_letter_1 = lm(letter_word_s ~ instrumented_letter_word_english + score + usborn + woman + age + as.factor(year), weights = kweights_letter_word_1, data = d2)
cace_letter_1_c = round(coeftest(cace_letter_1, vcov = vcovCluster(cace_letter_1, cluster = d2$CLS1_ID)),4)
cace_letter_1_c
d2$kweights_letter_word_2 = kernelwts(d2$score, 0, bw = 2.85, kernel = "triangular")
cace_letter_2 = lm(letter_word_s ~ instrumented_letter_word_english + score + usborn + woman + age + as.factor(year), weights = kweights_letter_word_2, data = d2)
cace_letter_2_c = round(coeftest(cace_letter_2, vcov = vcovCluster(cace_letter_2, cluster = d2$CLS1_ID)),4)
cace_letter_2_c
d2$kweights_letter_word_3 = kernelwts(d2$score, 0, bw = 2.90, kernel = "triangular")
cace_letter_3 = lm(letter_word_s ~ instrumented_letter_word_english + score + usborn + woman + age + as.factor(year), weights = kweights_letter_word_3, data = d2)
cace_letter_3_c = round(coeftest(cace_letter_3, vcov = vcovCluster(cace_letter_3, cluster = d2$CLS1_ID)),4)
cace_letter_3_c
d2$kweights_letter_word_4 = kernelwts(d2$score, 0, bw = 2.95, kernel = "triangular")
cace_letter_4 = lm(letter_word_s ~ instrumented_letter_word_english + score + usborn + woman + age + as.factor(year), weights = kweights_letter_word_4, data = d2)
cace_letter_4_c = round(coeftest(cace_letter_4, vcov = vcovCluster(cace_letter_4, cluster = d2$CLS1_ID)),4)
cace_letter_4_c
d2$kweights_letter_word_5 = kernelwts(d2$score, 0, bw = 3.00, kernel = "triangular")
cace_letter_5 = lm(letter_word_s ~ instrumented_letter_word_english + score + usborn + woman + age + as.factor(year), weights = kweights_letter_word_5, data = d2)
cace_letter_5_c = round(coeftest(cace_letter_5, vcov = vcovCluster(cace_letter_5, cluster = d2$CLS1_ID)),4)
cace_letter_5_c
pe_1 = cace_letter_1_c[2,1]
se_1 = cace_letter_1_c[2,2]
lower95_1 = pe_1 - se_1*1.960
upper95_1 = pe_1 + se_1*1.960
pe_2 = cace_letter_2_c[2,1]
se_2 = cace_letter_2_c[2,2]
lower95_2 = pe_2 - se_2*1.960
upper95_2 = pe_2 + se_2*1.960
pe_3 = cace_letter_3_c[2,1]
se_3 = cace_letter_3_c[2,2]
lower95_3 = pe_3 - se_3*1.960
upper95_3 = pe_3 + se_3*1.960
pe_4 = cace_letter_4_c[2,1]
se_4 = cace_letter_4_c[2,2]
lower95_4 = pe_4 - se_4*1.960
upper95_4 = pe_4 + se_4*1.960
pe_5 = cace_letter_5_c[2,1]
se_5 = cace_letter_5_c[2,2]
lower95_5 = pe_5 - se_5*1.960
upper95_5 = pe_5 + se_5*1.960
pe_letter = rbind(pe_1,pe_2,pe_3,pe_4,pe_5)
se_letter = rbind(se_1,se_2,se_3,se_4,se_5)
upper95_letter = rbind(upper95_1,upper95_2,upper95_3,upper95_4,upper95_5)
lower95_letter = rbind(lower95_1,lower95_2,lower95_3,lower95_4,lower95_5)
bw_letter = c(2.8,2.85,2.9,2.95,3)
results_letter = data.frame(pe_letter,se_letter,lower95_letter,upper95_letter,bw_letter)
head(results_letter)
tiff('~/Dropbox/DLL Assessments/03_manuscript/figures/cace_letter_bws.tiff', units="in", width=5, height=5, res=600, compression = 'lzw')
ggplot(results_letter, aes(x=bw_letter, y=pe_letter)) +
geom_hline(yintercept=0, size=1, color = "gray", linetype = 1) +
coord_flip(ylim = c(-0.5, 0.5), xlim = c(2.8, 3)) +
geom_pointrange(aes(ymin=lower95_letter,ymax=upper95_letter),size=0.5,position = position_dodge(0.9)) +
theme(legend.position="none") +
theme(axis.text=element_text(size=12)) +
theme_bw() +
ylab("CACE on Letter") +
xlab("Bandwidths (in absolute values)")
dev.off()
table(d1$score)
table(d$math_english,d$letter_word_english)
# ITT
itt1 = lm(math_sd ~ z_ind + score + usborn + women + age + as.factor(year), weights = kweights_math_sd, data = d1)
itt1_c = round(coeftest(itt1, vcov = vcovCluster(itt1, cluster = d1$CLS1_ID)),4)
itt1_c
# First stage by hand
first.stage.1 <- lm(math_english ~ score + z_ind, weights = kweights_math_sd, data=d1)
summary(first.stage.1)
# First stage by hand
first.stage.2 <- lm(letter_word_english ~ score + z_ind, weights = kweights_letter_word, data=d2)
summary(first.stage.2)
###############################################
# Dynamic DiD: All Visas and Crime Concerns
###############################################
rm(list=ls())
library(Hmisc)
library(readstata13)
library(foreign)
library(tidyverse)
library(did)
library(ggplot2)
set.seed(1111)
#sink("01_results_concerns_all.txt")
############################
# Read and prepare data
############################
# load data
load("final_county_2023april6.RData")
names(d_county)
###############################################
# Dynamic DiD: All Visas and Crime Concerns
###############################################
rm(list=ls())
library(Hmisc)
library(readstata13)
library(foreign)
library(tidyverse)
library(did)
library(ggplot2)
set.seed(1111)
#sink("01_results_concerns_all.txt")
############################
# Read and prepare data
############################
# load data
load("~/Dropbox/Immigration Chile/08_replication/final_county_2023april6.RDatafinal_county_2023april6.RData")
names(d_county)
load("~/Dropbox/Immigration Chile/08_replication/final_county_2023april6.RData")
names(d_county)
# d-did
set.seed(1111)
out1 <- att_gt(yname = "crime_concerns_s",
gname = "first.treat_all",
idname = "county",
tname = "survey",
data = d_county,
)
es1 <- aggte(out1, type = "dynamic",na.rm = TRUE)
summary(es1)
ggdid(es1)
summary(es1)
ggdid(es1)
summary(es1)
ggdid(es1)
#######################
# All: Results
#######################
# d-did
set.seed(1111)
out1 <- att_gt(yname = "crime_concerns_s",
gname = "first.treat_all",
idname = "county",
tname = "survey",
data = d_county,
)
es1 <- aggte(out1, type = "dynamic",na.rm = TRUE)
summary(es1)
ggdid(es1)
# save results for overall effect (Table A17)
pe1 <- es1$overall.att
se1 <- es1$overall.se
results1 <- rbind(pe1,se1)
results1
# table formal to prepare plot
event_study_diff_never <-   data.frame(
type          = "dynamic",
term = paste0('ATT(', es1$egt, ")"),
event.time= es1$egt,
estimate  = es1$att.egt,
std.error = es1$se.egt,
conf.low  = es1$att.egt - es1$crit.val.egt * es1$se.egt,
conf.high = es1$att.egt + es1$crit.val.egt  * es1$se.egt)
# plot
p_es_never1 <- ggplot(data = event_study_diff_never,
mapping = aes(x = event.time, y = estimate)) +
geom_line(size = 0.5, alpha = 2, colour = "black") +
theme_light()  +
geom_vline(xintercept = 0-0.05, color = 'grey', size = 1.2, linetype = "dotted") +
geom_hline(yintercept = 0, colour="black",  linetype = "dotted")+
geom_pointrange(aes(ymin = conf.low, ymax = conf.high), show.legend = FALSE, linetype= 1, size = 1.1,
color=ifelse(event_study_diff_never$event.time<0,"gray60","black"))+
xlab("Survey wave since immigration shock") +
ylab("DiD Estimate (in standard deviation units)") +
scale_x_continuous(breaks = c(-5:3)) +
scale_y_continuous(limits = c(-6.5,6.5)) +
theme(axis.text.y = element_text(size = 14),axis.title.y = element_text(size = 18)) +
theme(axis.text.x = element_text(size = 14),axis.title.x = element_text(size = 18)) +
theme(axis.title = element_text(color="black",  size = 12))+
theme(plot.title=ggtext::element_markdown(size = 12,
color="black",
hjust=0,
lineheight=1.2)
)+
annotate(geom="text", x=-0.5, y=5.75, label="Average of post-treatment coefficients (in standard deviation units):
-0.658
(0.308)",
color="black",
size = 7)
p_es_never1
# d-did
set.seed(1111)
out3 <- att_gt(yname = "crime_concerns_s",
gname = "first.treat_haiti",
idname = "county",
tname = "survey",
data = d_county)
es3 <- aggte(out3, type = "dynamic",na.rm = TRUE)
summary(es3)
ggdid(es3)
# save results for overall effect (Table A17)
pe3 <- es3$overall.att
se3 <- es3$overall.se
results3 <- rbind(pe3,se3)
results3
write.table(results3, "overallATT_3.txt", sep="\t")
# table formal to prepare plot
event_study_diff_never <-   data.frame(
type          = "dynamic",
term = paste0('ATT(', es3$egt, ")"),
event.time= es3$egt,
estimate  = es3$att.egt,
std.error = es3$se.egt,
conf.low  = es3$att.egt - es3$crit.val.egt * es3$se.egt,
conf.high = es3$att.egt + es3$crit.val.egt  * es3$se.egt)
# plot
p_es_never2 <- ggplot(data = event_study_diff_never,
mapping = aes(x = event.time, y = estimate)) +
geom_line(size = 0.5, alpha = 2, colour = "black") +
theme_light()  +
geom_vline(xintercept = 0-0.05, color = 'grey', size = 1.2, linetype = "dotted") +
geom_hline(yintercept = 0, colour="black",  linetype = "dotted")+
geom_pointrange(aes(ymin = conf.low, ymax = conf.high), show.legend = FALSE, linetype= 1, size = 1.1,
color=ifelse(event_study_diff_never$event.time<0,"gray60","black"))+
xlab("Survey wave since immigration shock") +
ylab("DiD Estimate (in standard deviation units)") +
scale_x_continuous(breaks = c(-7:8)) +
scale_y_continuous(limits = c(-6.5,6.5)) +
theme(axis.text.y = element_text(size = 14),axis.title.y = element_text(size = 18)) +
theme(axis.text.x = element_text(size = 14),axis.title.x = element_text(size = 18)) +
theme(axis.title = element_text(color="black",  size = 12))+
theme(plot.title=ggtext::element_markdown(size = 12,
color="black",
hjust=0,
lineheight=1.2)
) +
annotate(geom="text", x=1.5, y=5.75, label="Average of post-treatment coefficients (in standard deviation units):
0.573*
(0.244)",
color="black",
size = 7)
p_es_never2
library("ggplot2")
library(gridExtra)
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=10, height=7, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
dev.off()
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=20, height=14, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
dev.off()
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=20, height=12, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
dev.off()
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=20, height=10, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
dev.off()
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=20, height=9, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
dev.off()
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=20, height=8, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never1), ggplotGrob(p_es_never2), size="last"))
dev.off()
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig1.tiff', units="in", width=20, height=8, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never2),ggplotGrob(p_es_never1), size="last"))
dev.off()
###############################################
# Dynamic DiD: All Visas and Crime Rates
###############################################
rm(list=ls())
library(Hmisc)
library(readstata13)
library(foreign)
library(tidyverse)
library(did)
set.seed(1111)
#sink("~/Dropbox/Immigration Chile/02_analysis/06_results_rates_all.txt")
############################
# Read and prepare data
############################
# load data
load("~/Dropbox/Immigration Chile/08_replication/final_county_2023april6.RData")
names(d_county)
#######################
# All: Results
#######################
# d-did
set.seed(1111)
out5 <- att_gt(yname = "crime_rates_s",
gname = "first.treat_all",
idname = "county",
tname = "survey",
data = d_county,
est_method = "reg"
)
es5 <- aggte(out5, type = "dynamic",na.rm = TRUE)
summary(es5)
ggdid(es5)
# save results for overall effect
pe5 <- es5$overall.att
se5 <- es5$overall.se
results5 <- rbind(pe5,se5) # add baselines
results5
#write.table(results5, "~/Dropbox/Immigration Chile/02_analysis/overallATT_5.txt", sep="\t")
# table formal to prepare plot
event_study_diff_never <-   data.frame(
type          = "dynamic",
term = paste0('ATT(', es5$egt, ")"),
event.time= es5$egt,
estimate  = es5$att.egt,
std.error = es5$se.egt,
conf.low  = es5$att.egt - es5$crit.val.egt * es5$se.egt,
conf.high = es5$att.egt + es5$crit.val.egt  * es5$se.egt)
# plot
p_es_never3 <- ggplot(data = event_study_diff_never,
mapping = aes(x = event.time, y = estimate)) +
geom_line(size = 0.5, alpha = 2, colour = "black") +
theme_light()  +
geom_vline(xintercept = 0-0.05, color = 'grey', size = 1.2, linetype = "dotted") +
geom_hline(yintercept = 0, colour="black",  linetype = "dotted")+
geom_pointrange(aes(ymin = conf.low, ymax = conf.high), show.legend = FALSE, linetype= 1, size = 1.1,
color=ifelse(event_study_diff_never$event.time<0,"gray60","black"))+
#geom_pointrange(aes(ymin = point.conf.low, ymax = point.conf.high), show.legend = FALSE, size = 1.1)+
xlab("Survey wave since immigration shock") +
ylab("DiD Estimate (in standard deviation units)") +
scale_x_continuous(breaks = c(-5:3)) +
scale_y_continuous(limits = c(-4,4)) +
#scale_y_continuous(breaks = seq(-6,-3,0,3,6), limits = c(-7,7))+
theme(axis.text.y = element_text(size = 14),axis.title.y = element_text(size = 18)) +
theme(axis.text.x = element_text(size = 14),axis.title.x = element_text(size = 18)) +
theme(axis.title = element_text(color="black",  size = 12))+
theme(plot.title=ggtext::element_markdown(size = 12,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
) +
annotate(geom="text", x=-0.5, y=3.5, label="Average of post-treatment coefficients (in standard deviation units):
0.038
(0.068)",
color="black",
size = 7)
p_es_never3
#######################
# Haiti: Results
#######################
# d-did
set.seed(1111)
out7 <- att_gt(yname = "crime_rates_s",
gname = "first.treat_haiti",
idname = "county",
tname = "survey",
data = d_county,
est_method = "reg"
)
es7 <- aggte(out7, type = "dynamic",na.rm = TRUE)
summary(es7)
ggdid(es7)
# save results for overall effect
pe7 <- es7$overall.att
se7 <- es7$overall.se
results7 <- rbind(pe7,se7) # add baselines
results7
write.table(results7, "~/Dropbox/Immigration Chile/02_analysis/overallATT_7.txt", sep="\t")
# table formal to prepare plot
event_study_diff_never <-   data.frame(
type          = "dynamic",
term = paste0('ATT(', es7$egt, ")"),
event.time= es7$egt,
estimate  = es7$att.egt,
std.error = es7$se.egt,
conf.low  = es7$att.egt - es7$crit.val.egt * es7$se.egt,
conf.high = es7$att.egt + es7$crit.val.egt  * es7$se.egt)
# plot
p_es_never4 <- ggplot(data = event_study_diff_never,
mapping = aes(x = event.time, y = estimate)) +
geom_line(size = 0.5, alpha = 2, colour = "black") +
theme_light()  +
geom_vline(xintercept = 0-0.05, color = 'grey', size = 1.2, linetype = "dotted") +
geom_hline(yintercept = 0, colour="black",  linetype = "dotted")+
geom_pointrange(aes(ymin = conf.low, ymax = conf.high), show.legend = FALSE, linetype= 1, size = 1.1,
color=ifelse(event_study_diff_never$event.time<0,"gray60","black"))+
#geom_pointrange(aes(ymin = point.conf.low, ymax = point.conf.high), show.legend = FALSE, size = 1.1)+
xlab("Survey wave since immigration shock") +
ylab("DiD Estimate (in standard deviation units)") +
scale_x_continuous(breaks = c(-7:8)) +
scale_y_continuous(limits = c(-4,4)) +
#scale_y_continuous(breaks = seq(-6,-3,0,3,6), limits = c(-7,7))+
theme(axis.text.y = element_text(size = 14),axis.title.y = element_text(size = 18)) +
theme(axis.text.x = element_text(size = 14),axis.title.x = element_text(size = 18)) +
theme(axis.title = element_text(color="black",  size = 12))+
theme(plot.title=ggtext::element_markdown(size = 12,
#face = "bold",
color="black",
hjust=0,
lineheight=1.2)
) +
annotate(geom="text", x=1.4, y=3.5, label="Average of post-treatment coefficients (in standard deviation units):
-0.192
(0.105)",
color="black",
size = 7)
p_es_never4
###################
# Figure
###################
library("ggplot2")
library(gridExtra)
grid.arrange(cbind(ggplotGrob(p_es_never4), ggplotGrob(p_es_never3), size="last"))
# figure
tiff('~/Dropbox/Immigration Chile/03_manuscript/figures/fig2.tiff', units="in", width=20, height=8, res=200, compression = 'lzw')
grid.arrange(cbind(ggplotGrob(p_es_never4),ggplotGrob(p_es_never3), size="last"))
dev.off()
