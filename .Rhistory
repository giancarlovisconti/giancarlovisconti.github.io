##############################################
# Genetic Matching
##############################################
rm (list = ls())
library(foreign)
library(Hmisc)
library(xtable)
library(Matching)
library("rbounds")
library(rgenoud)
library(designmatch)
##############################################
# Read data and prepare basic output
##############################################
load("~/Dropbox/Share Space - Giancarlo 2/00_archive/clean data may 20/counties_chile_data_2015nov21.RData")
##############################################
# Prepare data
##############################################
# Treatment
d$t_ind = NA
d$t_ind[d$declaration==0]= 0
d$t_ind[d$pga>0.275 & d$declaration==1]= 1
table(d$t_ind)
# Drop observations
d = d[!is.na(d$t_ind), ] # Partially treated observations
d = d[d$smallcounty==0, ] # Small counties with missing data
d = d[d$newcounty==0, ] # New counties with missing data
d = d[d$dividedcounty==0,] # Counties that were divided in two
# Sort by treatment
d = d[order(d$t_ind, decreasing=TRUE), ]
# Attach the data
attach(d)
##############################################
# Explore data
##############################################
dim(d)
names(d)
total = nrow(d)
table(t_ind)
# Standardized Differences
num0_a = abs(mean(lagos99_p[t_ind==1])- mean(lagos99_p[t_ind==0]))
den0_a = sqrt(  ( (sd(lagos99_p[t_ind==1]))^2 + (sd(lagos99_p[t_ind==0]))^2 )/2  )
sd0_a = num0_a/den0_a
sd0_a
num0_b = abs(mean(lavin99_p[t_ind==1])- mean(lavin99_p[t_ind==0]))
den0_b = sqrt(  ( (sd(lavin99_p[t_ind==1]))^2 + (sd(lavin99_p[t_ind==0]))^2 )/2  )
sd0_b = num0_b/den0_b
sd0_b
num0_c = abs(mean(nontraditional99_p[t_ind==1])- mean(nontraditional99_p[t_ind==0]))
den0_c = sqrt(  ( (sd(nontraditional99_p[t_ind==1]))^2 + (sd(nontraditional99_p[t_ind==0]))^2 )/2  )
sd0_c = num0_c/den0_c
sd0_c
num0_d = abs(mean(bachelet05_p[t_ind==1])- mean(bachelet05_p[t_ind==0]))
den0_d = sqrt(  ( (sd(bachelet05_p[t_ind==1]))^2 + (sd(bachelet05_p[t_ind==0]))^2 )/2  )
sd0_d = num0_d/den0_d
sd0_d
num0_e = abs(mean(lavinpinera05_p[t_ind==1])- mean(lavinpinera05_p[t_ind==0]))
den0_e = sqrt(  ( (sd(lavinpinera05_p[t_ind==1]))^2 + (sd(lavinpinera05_p[t_ind==0]))^2 )/2  )
sd0_e = num0_e/den0_e
sd0_e
num0_f = abs(mean(nontraditional05_p[t_ind==1])- mean(nontraditional05_p[t_ind==0]))
den0_f = sqrt(  ( (sd(nontraditional05_p[t_ind==1]))^2 + (sd(nontraditional05_p[t_ind==0]))^2 )/2  )
sd0_f = num0_f/den0_f
sd0_f
num0_g = abs(mean(frei09_p[t_ind==1])- mean(frei09_p[t_ind==0]))
den0_g = sqrt(  ( (sd(frei09_p[t_ind==1]))^2 + (sd(frei09_p[t_ind==0]))^2 )/2  )
sd0_g = num0_g/den0_g
sd0_g
num0_h = abs(mean(pinera09_p[t_ind==1])- mean(pinera09_p[t_ind==0]))
den0_h = sqrt(  ( (sd(pinera09_p[t_ind==1]))^2 + (sd(pinera09_p[t_ind==0]))^2 )/2  )
sd0_h = num0_h/den0_h
sd0_h
num0_i = abs(mean(nontraditional09_p[t_ind==1])- mean(nontraditional09_p[t_ind==0]))
den0_i = sqrt(  ( (sd(nontraditional09_p[t_ind==1]))^2 + (sd(nontraditional09_p[t_ind==0]))^2 )/2  )
sd0_i = num0_i/den0_i
sd0_i
num0_j = abs(mean(dimingresos03[t_ind==1])- mean(dimingresos03[t_ind==0]))
den0_j = sqrt(  ( (sd(dimingresos03[t_ind==1]))^2 + (sd(dimingresos03[t_ind==0]))^2 )/2  )
sd0_j = num0_j/den0_j
num0_k = abs(mean(dimedu03[t_ind==1])- mean(dimedu03[t_ind==0]))
den0_k = sqrt(  ( (sd(dimedu03[t_ind==1]))^2 + (sd(dimedu03[t_ind==0]))^2 )/2  )
sd0_k = num0_k/den0_k
sd0_k
num0_l = abs(mean(dimsalud03[t_ind==1])- mean(dimsalud03[t_ind==0]))
den0_l = sqrt(  ( (sd(dimsalud03[t_ind==1]))^2 + (sd(dimsalud03[t_ind==0]))^2 )/2  )
sd0_l = num0_l/den0_l
sd0_l
num0_m = abs(mean(poverty09[t_ind==1])- mean(poverty09[t_ind==0]))
den0_m = sqrt(  ( (sd(poverty09[t_ind==1]))^2 + (sd(poverty09[t_ind==0]))^2 )/2  )
sd0_m = num0_m/den0_m
num0_n = abs(mean(pop2002_5[t_ind==1])- mean(pop2002_5[t_ind==0]))
den0_n = sqrt(  ( (sd(pop2002_5[t_ind==1]))^2 + (sd(pop2002_5[t_ind==0]))^2 )/2  )
sd0_n = num0_n/den0_n
sd0_n
num0_o = abs(mean(propwomen02[t_ind==1])- mean(propwomen02[t_ind==0]))
den0_o = sqrt(  ( (sd(propwomen02[t_ind==1]))^2 + (sd(propwomen02[t_ind==0]))^2 )/2  )
sd0_o = num0_o/den0_o
sd0_o
num0_p = abs(mean(prop35above02[t_ind==1])- mean(prop35above02[t_ind==0]))
den0_p = sqrt(  ( (sd(prop35above02[t_ind==1]))^2 + (sd(prop35above02[t_ind==0]))^2 )/2  )
sd0_p = num0_p/den0_p
sd0_p
num0_q = abs(mean(rural02_p[t_ind==1])- mean(rural02_p[t_ind==0]))
den0_q = sqrt(  ( (sd(rural02_p[t_ind==1]))^2 + (sd(rural02_p[t_ind==0]))^2 )/2  )
sd0_q = num0_q/den0_q
sd0_q
##############################################
# Genetic Matching
##############################################
# Defining variables (Tr is treatment, Y is outcome, X are independent variables)
Tr <- cbind(t_ind)
Y <- cbind(matthei13_p)
X <- cbind(lagos99_p,lavin99_p,nontraditional99_p,
bachelet05_p,lavinpinera05_p,nontraditional05_p,
frei09_p,pinera09_p,nontraditional09_p,
dimingresos03,dimedu03,dimsalud03,poverty09,
pop2002_5,propwomen02,prop35above02,rural02_p)
#Let's call GenMatch() to find the optimal weight to give each
#covariate in 'X' so as we have achieved balance on the covariates in X.
genout <- GenMatch(Tr = Tr, X = X, BalanceMatrix = X,pop.size=1000,replace=FALSE) # pop.size = 10
# Now that GenMatch() has found the optimal weights, let's estimate our causal effect of interest using those weights
mout <- Match(Y = Y, Tr = Tr, X = X, estimand="ATT", M = 1, replace=FALSE,ties=FALSE, Weight.matrix = genout)
summary(mout)
#Let's determine if balance has actually been obtained on the variables of interest
MatchBalance(Tr ~ X, data = d, match.out = mout, nboots = 1000) # nboots = 0
# Check data
table(t_ind[mout$index.treated])
table(t_ind[mout$index.control])
genout <- GenMatch(Tr = Tr, X = X, BalanceMatrix = X,pop.size=100,replace=FALSE) # pop.size = 10
