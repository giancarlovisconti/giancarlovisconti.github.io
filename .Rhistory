load("~/Dropbox/Nationalism Chile/01_data/matched_data/01_match_rematch.Rdata")
################
# Balance
################
# Moment balance: constrain differences in means to be at most 0.1 standard deviations apart
mom_covs = cbind(d_county$coderegion,
d_county$matthei13_p,
d_county$pinera17_p,
d_county$presvotes2013_1_all,
d_county$presvotes2017_1_all,
d_county$pop2011,
d_county$poverty11)
# check mean balance before matching
t_ind = d_county$t_ind
t_id0 = which(d_county$t_ind==1)
c_id0 = which(d_county$t_ind==0)
meantab(mom_covs, t_ind, t_id0, c_id0)
table(d_county$t_ind)
# check mean balance after matching
entire_sample = cbind(round(as.numeric(colMeans(mom_covs)),2))
meantab(mom_covs, t_ind, t_id_2, c_id_2)
nrow(d_county)
table(d_rematch$t_ind)
################
# Outcomes
################
# Check
d_rematch$kast21_p_s = (d_rematch$kast21_p - mean(d_rematch$kast21_p, na.rm = T))/sd(d_rematch$kast21_p, na.rm = T)
summary(lm(d_rematch$kast21_p ~ d_rematch$t_ind))
summary(lm(d_rematch$kast21_p_s ~ d_rematch$t_ind))
# generate datasets for test
test_d_rematch = data.frame(d_rematch$kast21_p[d_rematch$t_ind==1], d_rematch$kast21_p[d_rematch$t_ind==0])
colnames(test_d_rematch) = c("treated","control")
# point estimate
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$PointEstimate))[1]
# confidence intervals
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$Confidence.Interval))
# p-values
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=1,method="t")$pval))
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=1.5,method="t")$pval))
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=2.2,method="t")$pval))
################################
# Matching right
################################
rm (list = ls())
library(foreign)
library(did)
library(Hmisc)
library(gridExtra)
library("ggplot2")
library(designmatch)
library(gurobi)
library(exactRankTests)
library(reshape2)
library(xtable)
library(sensitivitymw)
library(sensitivitymv)
set.seed(987654)
###############################
# Load and prepare clean data
###############################
# load
load("~/Dropbox/Nationalism Chile/01_data/matched_data/01_match_rematch.Rdata")
################
# Balance
################
# Moment balance: constrain differences in means to be at most 0.1 standard deviations apart
mom_covs = cbind(d_county$coderegion,
d_county$matthei13_p,
d_county$pinera17_p,
d_county$presvotes2013_1_all,
d_county$presvotes2017_1_all,
d_county$pop2011,
d_county$poverty11)
# check mean balance before matching
t_ind = d_county$t_ind
t_id0 = which(d_county$t_ind==1)
c_id0 = which(d_county$t_ind==0)
meantab(mom_covs, t_ind, t_id0, c_id0)
table(d_county$t_ind)
# check mean balance after matching
entire_sample = cbind(round(as.numeric(colMeans(mom_covs)),2))
meantab(mom_covs, t_ind, t_id_2, c_id_2)
nrow(d_county)
table(d_rematch$t_ind)
################
# Outcomes
################
# Check
d_rematch$kast21_p_s = (d_rematch$kast21_p - mean(d_rematch$kast21_p, na.rm = T))/sd(d_rematch$kast21_p, na.rm = T)
summary(lm(d_rematch$kast21_p ~ d_rematch$t_ind))
summary(lm(d_rematch$kast21_p_s ~ d_rematch$t_ind))
# generate datasets for test
test_d_rematch = data.frame(d_rematch$kast21_p[d_rematch$t_ind==1], d_rematch$kast21_p[d_rematch$t_ind==0])
colnames(test_d_rematch) = c("treated","control")
# point estimate
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$PointEstimate))[1]
# confidence intervals
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$Confidence.Interval))
# p-values
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=1,method="t")$pval))
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=1.5,method="t")$pval))
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=2.1,method="t")$pval))
################################
# Matching right
################################
rm (list = ls())
library(foreign)
library(did)
library(Hmisc)
library(gridExtra)
library("ggplot2")
library(designmatch)
library(gurobi)
library(exactRankTests)
library(reshape2)
library(xtable)
library(sensitivitymw)
library(sensitivitymv)
set.seed(987654)
###############################
# Load and prepare clean data
###############################
# load
load("~/Dropbox/Nationalism Chile/01_data/clean_data/individual_county_immigration_2022nov17.RData")
# covariates
describe(d_county$pop2011)
describe(d_county$poverty11)
describe(d_county$dimingresos03)
describe(d_county$dimsalud03)
describe(d_county$dimedu03)
# drop missing
#d_county = d_county[!is.na(d_county$dimsalud03),]
##############################################
# Match
##############################################
# treatment
d_county$t_ind = 0
d_county$t_ind[d_county$first_treat>0] = 1
table(d_county$t_ind, exclude = NULL)
# sort by treatment
d_county = d_county[order(d_county$t_ind, decreasing=TRUE), ]
d_county$t_ind
# Cardinality matching finds the largest matched sample of pairs that meets balance
# requirements. Here the balance requirement is mean balance.
# Treatment indicator
t_ind = d_county$t_ind
# Moment balance: constrain differences in means to be at most 0.1 standard deviations apart
mom_covs = cbind(d_county$matthei13_p,
d_county$bachelet13_p,
d_county$presvotes2013_1_all,
d_county$coderegion,
d_county$pop2011,
d_county$poverty11)
mom_targets = as.numeric(colMeans(mom_covs))
mom_tols = absstddif(mom_covs, t_ind, .1)
mom = list(covs = mom_covs, tols = mom_tols, targets = mom_targets)
# check mean balance before matching
t_id0 = which(d_county$t_ind==1)
c_id0 = which(d_county$t_ind==0)
meantab(mom_covs, t_ind, t_id0, c_id0)
# Solver options
t_max = 60*30
solver = "gurobi"
approximate = 0
solver = list(name = solver, t_max = t_max, approximate = approximate,
round_cplex = 0, trace = 1)
# Match
out = cardmatch(t_ind, mom = mom, solver = solver)
# Indices of the treated units and matched controls
t_id = out$t_id
c_id = out$c_id
table(table(t_id))
table(table(c_id))
# Mean balance
meantab(mom_covs, t_ind, t_id, c_id)
# Create matched and rematched sample
d_match = d_county[c(t_id, c_id), ]
# New treatment indicator
t_ind_2 = t_ind[c(t_id, c_id)]
table(t_ind_2)
# To build the distance matrix, the idea is to use strong predictors of the outcome
dist_mat_2 = abs(outer(d_county$pinera17_p[t_id], d_county$pinera17_p[c_id], "-"))
dim(dist_mat_2)
# Match
out_2 = distmatch(t_ind_2, dist_mat_2, solver)
# Indices of the treated units and matched controls
t_id_2 = t_id[out_2$t_id]
c_id_2 = c_id[out_2$c_id-length(out_2$c_id)]
# Covariate balance is preserved...
meantab(mom_covs, t_ind, t_id_2, c_id_2)
# ... but covariate distances are reduced
distances_step_1 = sum(diag(dist_mat_2))
distances_step_2 = sum(diag(dist_mat_2[out_2$t_id, out_2$c_id-length(out_2$c_id)]))
distances_step_1
distances_step_2
# Create matched and rematched sample
d_rematch = d_county[c(t_id_2, c_id_2), ]
# save
save(d_county,d_rematch,t_id_2,c_id_2,file="~/Dropbox/Nationalism Chile/01_data/matched_data/01_match_rematch.Rdata")
################################
# Matching right
################################
rm (list = ls())
library(foreign)
library(did)
library(Hmisc)
library(gridExtra)
library("ggplot2")
library(designmatch)
library(gurobi)
library(exactRankTests)
library(reshape2)
library(xtable)
library(sensitivitymw)
library(sensitivitymv)
set.seed(987654)
###############################
# Load and prepare clean data
###############################
# load
load("~/Dropbox/Nationalism Chile/01_data/matched_data/01_match_rematch.Rdata")
################
# Balance
################
# Moment balance: constrain differences in means to be at most 0.1 standard deviations apart
mom_covs = cbind(d_county$matthei13_p,
d_county$bachelet13_p,
d_county$presvotes2013_1_all,
d_county$coderegion,
d_county$pop2011,
d_county$poverty11)
# check mean balance before matching
t_ind = d_county$t_ind
t_id0 = which(d_county$t_ind==1)
c_id0 = which(d_county$t_ind==0)
meantab(mom_covs, t_ind, t_id0, c_id0)
189+87
####################################
# World values analysis
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)
################
# Prepare data
################
# reada data
d = read.dta13("~/Dropbox/Nationalism Chile/01_data/clean_data/survey_world_values_2022nov11.dta")
names(d)
# check data
table(d$treatment, exclude = NULL)
table(d$year)
table(d$country)
####################################
# World values analysis
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)A
# reada data
d = read.dta13("~/Dropbox/Nationalism Chile/01_data/clean_data/survey_world_values_2022nov11.dta")
names(d)
# check data
table(d$treatment, exclude = NULL)
table(d$year)
table(d$country)
######################
# Fight
######################
# Country fixed effects
reg1 = lm(d$fight ~ d$treatment + as.factor(d$country))
summary(reg1)
predict(reg1, interval = 'confidence')
summary(reg1)
predict(reg1, interval = 'confidence')
####################################
# World values analysis
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)A
####################################
# World values analysis
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)A
####################################
# World values analysis
####################################
rm(list=ls())
library(Hmisc)
library(ggplot2)
library(stargazer)
library(foreign)
library(rdrobust)
library(rdd)
library(readstata13)
################
# Prepare data
################
# read data
d = read.dta13("~/Dropbox/Nationalism Chile/01_data/clean_data/survey_world_values_2022nov11.dta")
names(d)
# check data
table(d$treatment, exclude = NULL)
table(d$year)
table(d$country)
# Country fixed effects
reg1 = lm(d$fight ~ d$treatment + as.factor(d$country))
summary(reg1)
confint(reg1, 'treatment', level=0.95)
summary(reg1)
confint(reg1, 'd$treatment', level=0.95)
round(confint(reg1, 'd$treatment', level=0.95),2)
################################
# Matching right
################################
rm (list = ls())
library(foreign)
library(did)
library(Hmisc)
library(gridExtra)
library("ggplot2")
library(designmatch)
library(gurobi)
library(exactRankTests)
library(reshape2)
library(xtable)
library(sensitivitymw)
library(sensitivitymv)
set.seed(987654)
###############################
# Load and prepare clean data
###############################
# load
load("~/Dropbox/Nationalism Chile/01_data/matched_data/01_match_rematch.Rdata")
################
# Balance
################
# Moment balance: constrain differences in means to be at most 0.1 standard deviations apart
mom_covs = cbind(d_county$matthei13_p,
d_county$bachelet13_p,
d_county$presvotes2013_1_all,
d_county$coderegion,
d_county$pop2011,
d_county$poverty11)
# check mean balance before matching
t_ind = d_county$t_ind
t_id0 = which(d_county$t_ind==1)
c_id0 = which(d_county$t_ind==0)
meantab(mom_covs, t_ind, t_id0, c_id0)
meantab(mom_covs, t_ind, t_id0, c_id0)
table(d_county$t_ind)
# check mean balance after matching
entire_sample = cbind(round(as.numeric(colMeans(mom_covs)),2))
meantab(mom_covs, t_ind, t_id_2, c_id_2)
nrow(d_county)
entire_sample
# check mean balance after matching
entire_sample = cbind(round(as.numeric(colMeans(mom_covs)),2))
entire_sample
meantab(mom_covs, t_ind, t_id_2, c_id_2)
nrow(d_county)
table(d_rematch$t_ind)
entire_sample
meantab(mom_covs, t_ind, t_id_2, c_id_2)
meantab(mom_covs, t_ind, t_id0, c_id0)
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$PointEstimate))[1]
# Check
d_rematch$kast21_p_s = (d_rematch$kast21_p - mean(d_rematch$kast21_p, na.rm = T))/sd(d_rematch$kast21_p, na.rm = T)
summary(lm(d_rematch$kast21_p ~ d_rematch$t_ind))
summary(lm(d_rematch$kast21_p_s ~ d_rematch$t_ind))
# generate datasets for test
test_d_rematch = data.frame(d_rematch$kast21_p[d_rematch$t_ind==1], d_rematch$kast21_p[d_rematch$t_ind==0])
colnames(test_d_rematch) = c("treated","control")
# point estimate
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$PointEstimate))[1]
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=1,method="t")$pval))
as.numeric(sprintf("%.5f",senmw(test_d_rematch,gamma=2.1,method="t")$pval))
as.numeric(sprintf("%.5f",senmwCI(test_d_rematch,gamma=1,method="t",one.sided=T)$PointEstimate))[1]
################################
# Matching right
################################
rm (list = ls())
###############################################
# Dynamic DiD: Visas Haiti and Crime Rates
###############################################
rm(list=ls())
# fire
out <- att_gt(yname = "outcome_descending",
gname = "first_treat_fire6",
idname = "id",
tname = "survey",
xformla = ~educ_10 + gender_10 + birthyr_10 + pi_10 + ideo_10,
alp = 0.1,
#control_group = c("notyettreated"),
data = d)
es <- aggte(out, type = "dynamic")
summary(es)
#####################
# DID panel data
#####################
rm (list = ls())
#sink("~/Dropbox/Climate change and disasters/02_analyses/01_DDID_panel.txt")
library(foreign)
library(stargazer)
library(Hmisc)
library(ggplot2)
library(tidyverse)
library(readstata13)
library(did)
set.seed(2020)
###############################
# Load and prepare clean data
###############################
# load
load("~/Dropbox/Climate change and disasters/01_data/clean_data/final_panel_climate_change_disasters_2023march21.RData")
dim(d)
# check covariates
describe(d$id)
table(d$educ_10, exclude = NULL)
table(d$gender_10, exclude = NULL)
table(d$birthyr_10, exclude = NULL)
table(d$pi_10, exclude = NULL)
table(d$ideo_10, exclude = NULL)
# check outcome
table(d$outcome_descending, exclude = NULL)
table(d$outcome_binary, exclude = NULL)
table(d$outcome1, exclude = NULL)
table(d$outcome2, exclude = NULL)
table(d$outcome3, exclude = NULL)
table(d$outcome4, exclude = NULL)
table(d$outcome5, exclude = NULL)
# check
table(d$id, exclude = NULL)
table(d$first_treat1, exclude = NULL)
table(d$survey, exclude = NULL)
# party id
table(d$pi_10)
d$pi_10_1 = 0
d$pi_10_1[d$pi_10==1]=1
table(d$pi_10_1)
d$pi_10_2 = 0
d$pi_10_2[d$pi_10==2]=1
table(d$pi_10_2)
d$pi_10_3 = 0
d$pi_10_3[d$pi_10==3]=1
table(d$pi_10_3)
#d = d[!is.na(d$pi_10),]
#d = d[!is.na(d$ideo_10),]
#################################################
# Outcome: descending; Treatment: previous year
################################################
# fire
out <- att_gt(yname = "outcome_descending",
gname = "first_treat_fire6",
idname = "id",
tname = "survey",
xformla = ~educ_10 + gender_10 + birthyr_10 + pi_10 + ideo_10,
alp = 0.1,
#control_group = c("notyettreated"),
data = d)
es <- aggte(out, type = "dynamic")
summary(es)
out <- att_gt(yname = "outcome_descending",
gname = "first_treat_fire6",
idname = "id",
tname = "survey",
#xformla = ~educ_10 + gender_10 + birthyr_10 + pi_10 + ideo_10,
alp = 0.1,
#control_group = c("notyettreated"),
data = d)
es <- aggte(out, type = "dynamic")
summary(es)
set.seed(2020)
# fire
out <- att_gt(yname = "outcome_descending",
gname = "first_treat_fire6",
idname = "id",
tname = "survey",
#xformla = ~educ_10 + gender_10 + birthyr_10 + pi_10 + ideo_10,
alp = 0.1,
#control_group = c("notyettreated"),
data = d)
es <- aggte(out, type = "dynamic")
summary(es)
#####################
# DID panel data
#####################
rm (list = ls())
